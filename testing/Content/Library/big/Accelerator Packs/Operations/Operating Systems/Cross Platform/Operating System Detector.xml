<?xml version="1.0" encoding="UTF-8"?>
<operation id="43f84acd-f31b-4063-9925-c3ab7d48c9c9">
  <descriptionCdata><![CDATA[43f84acd-f31b-4063-9925-c3ab7d48c9c9.description=This flow detects the operating system that is running on the specified host.\n\nInputs\:\n    host - The hostname or IP address of the target machine.\n    port - The port number used for ssh connection.\nDefault value\: 22\n    username - The username to connect to the target machine.\n    password - The password to connect to the target machine.\n    timeout - The timeout in seconds for remote and local execution calls that the operation makes.\n    portDetectionRules - port rules in JSON format based on wich the operating system name will be determinate in case ssh connection fails on unix based hosts and Nmap command fail to determine the OS for Windows hosts. This input must respect the format from the example below or it won't be used.\n    nmapArguments - The arguments used in nmap command in order to detect te operating system.\nDefault value\: nmap -sS -sU -O -Pn --top-ports 20\n\nResults\:\n    returnResult - This is the primary output. It contains the output of a "uname -a; uname -m; domainname" for Unix based hosts, and the result of a Nmap command "nmap -sS -sU -O -Pn --top-ports 20" for a Windows host. \n    returnCode - The return code of the operation. \nValid values\: 32 for a Windows operating system, 18 for Linux, 19 for Solaris, 20 for other operating system, -1 for failure.\n    osName - The completely returned string of the OS name. For Windows target host, this will be an heuristic result.\nExample\: Microsoft Windows 7, Windows Server 2012, or Windows 8.1 Update 1\n    version - The operating systems version. For Unix systems, this result contains the kernel release version. For Windows systems, this will be empty.\n    hostName - The host name that the remote computer reports for itself.\n    osArchitecture - The operating system architecture. For Windows systems, this will be empty.\nExamples\: x86_64 for Linux, i86pc for Solaris\n    fqdn - The fully qualified domain name (FQDN) of the target machine. For Windows systems, this will be empty.\n\nResponses\:\n    windows - The operating system is Windows.\n    linux - The operating system is Linux.\n    solaris - The operating system is Solaris.\n    other - Other operating system.\n    failure - The operating system on the remote host could not be detected.\n\nNotes\:\n    1. This operation uses Nmap ("Network Mapper") for Windows target machine, an open source tool for network exploration and security auditing. Nmap must be installed on source machine (Studio/Central/RAS) from http\://nmap.org. \n    2. The Nmap OS detection is heuristic, based on the TCP/IP stack fingerprinting and network traffic. Nmap sends a series of TCP and UDP packets to the remote host and examines practically every bit in the responses. After performing dozens of tests such as TCP ISN sampling, TCP options support and ordering, IP ID sampling, and the initial window size check, Nmap compares the results to its nmap-os-db database of more than 2,600 known OS fingerprints and prints out the OS details if there is a match. When Nmap performs OS detection against a target and fails to find a perfect match, it usually repeats the attempt. By default, Nmap tries five times if conditions are favorable for OS fingerprint submission, and twice when conditions aren't so good.\n    3. For Windows RAS, the Operations Orchestration Central/RAS service must be run with Administrator priviledges.\n    4. portDetectionRules example\:\n{\n    "Windows"\: {\n        "port_rules"\:[\n            {\n                "open"\:["135", "445"]\n            },\n            {\n                "close"\:"22",\n                "open"\:"3389"\n            },\n            {\n                "open"\:"1002"\n            }\n        ]\n    },\n    "Unix"\: {\n        "port_rules"\: [\n            {\n                "open"\:"22"\n            },\n            {\n                "open"\:"514",\n                "close"\:"135"\n            }\n        ]\n    },\n    "Other"\:"default"\n}\n\nThis example is intended only for undersanding all capabilities for the new input.\nIn case os detector fails with nmap command and with ssh connection this input will be used as follows\: \nIt will try the first rule. For this example if ports 135 and 445 are opened the operation will assume it's a Windows. If one of them is closed it will check the second rule which check if port 22 is closed and 3389 is open. If the second rule is true it will asume the os is still a windows. If not it will check the 3'rd rule and so on. If all rules for the first os fail the rules from the second os will be checked in order. You can define as many responses as you want "Windows", "Unix", "Linux", "Solaris", "AIX", "Other". For each response you must define a array of "port_rules". Each rule can contain one ore many ports to check they are opened and one ore more ports to check if they are closed. All condition from one rule must be ment in order for the operation to return the desired result. You can also add a default result. If all rules checks failed the operation will not fail and will return the default output. It is recomanded the default rule to be the last one. Otherwise operation won't reach the rules after default because default always returns true.
]]></descriptionCdata>
  <annotation>43f84acd-f31b-4063-9925-c3ab7d48c9c9.description</annotation>
  <name>Operating System Detector</name>
  <categories/>
  <inputs>
    <userInputBinding id="4a91b89f-0db2-427a-ab44-0036fab598c4">
      <annotation></annotation>
      <assignFromContext>true</assignFromContext>
      <assignToContext>false</assignToContext>
      <inputType>STRING</inputType>
      <isList>false</isList>
      <required>true</required>
      <isPersisted>true</isPersisted>
      <inputSymbol>host</inputSymbol>
      <listDelimiter>,</listDelimiter>
      <record>false</record>
      <prompt></prompt>
      <isMultiSelect>false</isMultiSelect>
      <sourceDelimiter>|</sourceDelimiter>
    </userInputBinding>
    <staticBinding id="8cf4751d-ae7e-4550-8487-305b0b223524">
      <annotation></annotation>
      <assignFromContext>true</assignFromContext>
      <assignToContext>false</assignToContext>
      <inputType>STRING</inputType>
      <isList>false</isList>
      <required>false</required>
      <isPersisted>true</isPersisted>
      <inputSymbol>port</inputSymbol>
      <listDelimiter>,</listDelimiter>
      <value>22</value>
      <record>false</record>
    </staticBinding>
    <userInputBinding id="3392fe87-f598-47e6-919d-a5c3f74f56fb">
      <annotation></annotation>
      <assignFromContext>true</assignFromContext>
      <assignToContext>false</assignToContext>
      <inputType>STRING</inputType>
      <isList>false</isList>
      <required>false</required>
      <isPersisted>true</isPersisted>
      <inputSymbol>username</inputSymbol>
      <listDelimiter>,</listDelimiter>
      <record>false</record>
      <prompt></prompt>
      <isMultiSelect>false</isMultiSelect>
      <sourceDelimiter>|</sourceDelimiter>
    </userInputBinding>
    <userInputBinding id="2eadf22d-2d20-457c-811a-9282c6eb72bc">
      <annotation></annotation>
      <assignFromContext>true</assignFromContext>
      <assignToContext>false</assignToContext>
      <inputType>ENCRYPTED</inputType>
      <isList>false</isList>
      <required>false</required>
      <isPersisted>true</isPersisted>
      <inputSymbol>password</inputSymbol>
      <listDelimiter>,</listDelimiter>
      <record>false</record>
      <prompt></prompt>
      <isMultiSelect>false</isMultiSelect>
      <sourceDelimiter>|</sourceDelimiter>
    </userInputBinding>
    <staticBinding id="42fb6b44-b4f9-482b-a391-d02eddd77323">
      <annotation></annotation>
      <assignFromContext>true</assignFromContext>
      <assignToContext>true</assignToContext>
      <inputType>STRING</inputType>
      <isList>false</isList>
      <required>false</required>
      <isPersisted>true</isPersisted>
      <inputSymbol>timeout</inputSymbol>
      <listDelimiter>,</listDelimiter>
      <value></value>
      <record>false</record>
    </staticBinding>
    <staticBinding id="c7ef1446-7dbe-4cbe-bcba-2ed937fb84c2">
      <annotation></annotation>
      <assignFromContext>true</assignFromContext>
      <assignToContext>true</assignToContext>
      <inputType>STRING</inputType>
      <isList>false</isList>
      <required>false</required>
      <isPersisted>true</isPersisted>
      <inputSymbol>portDetectionRules</inputSymbol>
      <listDelimiter>,</listDelimiter>
      <value>{
    &quot;windows&quot;: {
        &quot;port_rules&quot;:[
            {
                &quot;open&quot;:[&quot;135&quot;, &quot;445&quot;]
            }
        ]
    },
    &quot;Other&quot;:&quot;default&quot;
}</value>
      <record>false</record>
    </staticBinding>
    <staticBinding id="faef5597-ed76-46a7-b153-93b60e1550ed">
      <annotation></annotation>
      <assignFromContext>true</assignFromContext>
      <assignToContext>true</assignToContext>
      <inputType>STRING</inputType>
      <isList>false</isList>
      <required>false</required>
      <isPersisted>true</isPersisted>
      <inputSymbol>nmapArguments</inputSymbol>
      <listDelimiter>,</listDelimiter>
      <value>nmap -sS -sU -O -Pn --top-ports 20</value>
      <record>false</record>
    </staticBinding>
  </inputs>
  <possibleResponses>
    <opResponse id="62cdd0ea-f175-496d-b969-b09632d00667">
      <annotation></annotation>
      <name>windows</name>
      <isDefault>false</isDefault>
      <onFailure>false</onFailure>
      <type>RESOLVED</type>
      <matchRules>
        <expression id="76166c19-e7ba-4186-b36a-e00969ee8cce">
          <annotation></annotation>
          <name>returnCode</name>
          <fieldName>returnCode</fieldName>
          <sourceType>RAWRESULT</sourceType>
          <compare id="b4ef9382-5830-4f59-bc20-86e11d0a8eb7">
            <annotation></annotation>
            <name>Config Item</name>
            <text>32</text>
            <matchType>=</matchType>
          </compare>
          <filters/>
        </expression>
      </matchRules>
    </opResponse>
    <opResponse id="218fdf3c-8514-4bfb-b8ca-68abc4cb3ec6">
      <annotation></annotation>
      <name>linux</name>
      <isDefault>false</isDefault>
      <onFailure>false</onFailure>
      <type>RESOLVED</type>
      <matchRules>
        <expression id="7809fd59-09ef-4a3c-b135-02828c282bcc">
          <annotation></annotation>
          <name>returnCode</name>
          <fieldName>returnCode</fieldName>
          <sourceType>RAWRESULT</sourceType>
          <compare id="4bbdc84b-5139-47b5-9c41-cb91fc7c9665">
            <annotation></annotation>
            <name>Config Item</name>
            <text>18</text>
            <matchType>=</matchType>
          </compare>
          <filters/>
        </expression>
      </matchRules>
    </opResponse>
    <opResponse id="35c0e318-0e09-484d-8105-64bc0048ea1e">
      <annotation></annotation>
      <name>solaris</name>
      <isDefault>false</isDefault>
      <onFailure>false</onFailure>
      <type>RESOLVED</type>
      <matchRules>
        <expression id="afc163a6-097b-4858-9767-550a8573ba91">
          <annotation></annotation>
          <name>returnCode</name>
          <fieldName>returnCode</fieldName>
          <sourceType>RAWRESULT</sourceType>
          <compare id="f35e105b-1b7d-43b1-9a05-66f6e58c74af">
            <annotation></annotation>
            <name>Config Item</name>
            <text>19</text>
            <matchType>=</matchType>
          </compare>
          <filters/>
        </expression>
      </matchRules>
    </opResponse>
    <opResponse id="317fd637-035a-4c78-8739-5a12de642698">
      <annotation></annotation>
      <name>other</name>
      <isDefault>false</isDefault>
      <onFailure>false</onFailure>
      <type>RESOLVED</type>
      <matchRules>
        <expression id="e7753596-d99e-44d2-8665-7c55504f744e">
          <annotation></annotation>
          <name>returnCode</name>
          <fieldName>returnCode</fieldName>
          <sourceType>RAWRESULT</sourceType>
          <compare id="592af63e-b5b3-4dae-a034-ffbd500ff007">
            <annotation></annotation>
            <name>Config Item</name>
            <text>20</text>
            <matchType>=</matchType>
          </compare>
          <filters/>
        </expression>
      </matchRules>
    </opResponse>
    <opResponse id="a91e3124-1e97-4c4f-b117-945e5efc0b58">
      <annotation></annotation>
      <name>failure</name>
      <isDefault>true</isDefault>
      <onFailure>true</onFailure>
      <type>ERROR</type>
      <matchRules>
        <expression id="a1dffd62-85ec-4882-a337-6eefbfaa4044">
          <annotation></annotation>
          <name>returnCode</name>
          <fieldName>returnCode</fieldName>
          <sourceType>RAWRESULT</sourceType>
          <compare id="3ac7d9d2-5bfa-47aa-97d6-ac578556e5fa">
            <annotation></annotation>
            <name>Config Item</name>
            <text>-1</text>
            <matchType>=</matchType>
          </compare>
          <filters/>
        </expression>
      </matchRules>
    </opResponse>
  </possibleResponses>
  <availableResultExpressions/>
  <resultExpression id="9f2b580c-871f-4d15-a5ba-19b30b8e6abf">
    <annotation></annotation>
    <name>returnResult</name>
    <fieldName>returnResult</fieldName>
    <sourceType>RAWRESULT</sourceType>
    <filters/>
  </resultExpression>
  <iconSpec id="39e7b0af-8209-451a-b4f3-69539bf6b0fd">
    <baseIcon>client_network.png</baseIcon>
    <basePath>/Networking/</basePath>
    <readOnly>false</readOnly>
    <layers/>
  </iconSpec>
  <plugin>
    <groupId>com.hp.oo</groupId>
    <artifactId>oo-base-plugin</artifactId>
    <version>1.23.3</version>
    <actionName>Operating System Detector</actionName>
  </plugin>
  <fieldValues/>
  <groupAliasRef>
    <refId>5233030c-af46-432b-a682-b326ca6bf2ae</refId>
    <refName>RAS_Operator_Path</refName>
  </groupAliasRef>
  <overrideGroupAlias>${overrideJRAS}</overrideGroupAlias>
</operation>