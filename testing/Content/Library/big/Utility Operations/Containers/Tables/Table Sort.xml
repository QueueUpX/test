<?xml version="1.0" encoding="UTF-8"?>
<operation id="395e7761-d82d-4e73-b324-1438bf48082a">
  <descriptionCdata><![CDATA[395e7761-d82d-4e73-b324-1438bf48082a.475a440e-022e-4608-b75a-acc12b22020e.prompt=Reverse Sort
395e7761-d82d-4e73-b324-1438bf48082a.description=This will sort a table based upon one column in the table.  If all of the entries in that column are numeric the sort will be numeric, otherwise it will be alphabetic.\n\n<pre>\nInputs\:\nTable\: the table to sort\ncolumnDelimiter - the character used to delimit columns\nrowDelimiter - the character used to delimit rows\ncolumn - the number of the column to sort on(starting at 1).\nreverse - set to "true" to make the sort a reverse sort\n\nResults\:\nThe sorted table output with the same row and column delimiters\n\nResponses\:\nsuccess - if the sort completed\nfailure - if there was an error, for example the specified column was missing in one or more entries\n</pre>
]]></descriptionCdata>
  <annotation>395e7761-d82d-4e73-b324-1438bf48082a.description</annotation>
  <name>Table Sort</name>
  <categories/>
  <inputs>
    <userInputBinding id="f77c86d5-d07e-4b7f-bc91-273d9116aa5f">
      <annotation></annotation>
      <assignFromContext>false</assignFromContext>
      <assignToContext>false</assignToContext>
      <inputType>STRING</inputType>
      <isList>false</isList>
      <required>true</required>
      <isPersisted>true</isPersisted>
      <inputSymbol>table</inputSymbol>
      <listDelimiter>,</listDelimiter>
      <record>false</record>
      <prompt></prompt>
      <isMultiSelect>false</isMultiSelect>
      <sourceDelimiter>|</sourceDelimiter>
    </userInputBinding>
    <userInputBinding id="ed2af74c-9292-4d78-8b33-142dae22d367">
      <annotation></annotation>
      <assignFromContext>false</assignFromContext>
      <assignToContext>false</assignToContext>
      <inputType>STRING</inputType>
      <isList>false</isList>
      <required>true</required>
      <isPersisted>true</isPersisted>
      <inputSymbol>columnDelimiter</inputSymbol>
      <listDelimiter>,</listDelimiter>
      <record>false</record>
      <prompt></prompt>
      <isMultiSelect>false</isMultiSelect>
      <sourceDelimiter>|</sourceDelimiter>
    </userInputBinding>
    <userInputBinding id="62261ccf-d398-4f1e-a968-977227e28b65">
      <annotation></annotation>
      <assignFromContext>false</assignFromContext>
      <assignToContext>false</assignToContext>
      <inputType>STRING</inputType>
      <isList>false</isList>
      <required>true</required>
      <isPersisted>true</isPersisted>
      <inputSymbol>rowDelimiter</inputSymbol>
      <listDelimiter>,</listDelimiter>
      <record>false</record>
      <prompt></prompt>
      <isMultiSelect>false</isMultiSelect>
      <sourceDelimiter>|</sourceDelimiter>
    </userInputBinding>
    <userInputBinding id="4c42a423-d2b3-4af5-a1e1-935db204d76e">
      <annotation></annotation>
      <assignFromContext>false</assignFromContext>
      <assignToContext>false</assignToContext>
      <inputType>STRING</inputType>
      <isList>false</isList>
      <required>true</required>
      <isPersisted>true</isPersisted>
      <inputSymbol>column</inputSymbol>
      <listDelimiter>,</listDelimiter>
      <record>false</record>
      <prompt></prompt>
      <isMultiSelect>false</isMultiSelect>
      <sourceDelimiter>|</sourceDelimiter>
    </userInputBinding>
    <userInputBinding id="475a440e-022e-4608-b75a-acc12b22020e">
      <annotation></annotation>
      <assignFromContext>false</assignFromContext>
      <assignToContext>false</assignToContext>
      <inputType>STRING</inputType>
      <isList>false</isList>
      <required>false</required>
      <isPersisted>true</isPersisted>
      <inputSymbol>reverse</inputSymbol>
      <listDelimiter>,</listDelimiter>
      <record>false</record>
      <prompt>395e7761-d82d-4e73-b324-1438bf48082a.475a440e-022e-4608-b75a-acc12b22020e.prompt</prompt>
      <isMultiSelect>false</isMultiSelect>
      <link>
        <refId>96a1ed25-cdc9-4ff6-8fba-e9c044c5ca53</refId>
        <refName>Boolean - False Default</refName>
      </link>
      <sourceDelimiter>|</sourceDelimiter>
    </userInputBinding>
  </inputs>
  <scriptlet id="ebdd12ce-598c-4daf-a27f-1903d4d24800">
    <annotation></annotation>
    <name>Operation Table Sort (d1f4762e-b341-49e9-9002-02d0538735ac)</name>
    <script>scriptletResult = &quot;&quot;;
scriptletResponse = &quot;failure&quot;;
error = &quot;false&quot;;
outlines = new Array;

// get the lines from the table
lines = table.split(rowDelimiter);

if (lines != null &amp;&amp; lines != &quot;&quot;) {

   // count the list and figure out if it is numeric or not
   numeric = &quot;true&quot;;
   for (total = 0; total &lt; 10000; total++) {
      // are we at the end of the list?
      if (lines[total] == null || lines[total] == &quot;&quot;) break;

      // split the line into columns
      cols = lines[total].split(columnDelimiter);

      // which column do we care about?
      check = column - 1;

      // is there acutally data?
      if (cols == null || cols[check] == null) {
          error = &quot;true&quot;;
          break;
      }
      if (cols[check].match(/[^0-9.]/) != null || cols[check].match(/[0-9.]/) == null) numeric = false;
      outlines[total] = lines[total];
   }

   if (error == &quot;false&quot;) {
      outlines.sort(sortTable);

      // create the new list
      for (i = 0; i &lt; total; i++) {
         if (outlines[i] == null) break;
         if (i != 0) scriptletResult += rowDelimiter;
         scriptletResult += outlines[i];
      }

      scriptletResponse = &quot;success&quot;;
   }
}

// this assumes we are getting two lines as input and deciding based on one column
function sortTable(a,b) {
   // split the line into columns
   colA = a.split(columnDelimiter);
   colB = b.split(columnDelimiter);
   // which column do we care about?
   check = column - 1;
   if (numeric == &quot;true&quot;) {
      value =  (colA[check] - colB[check]);
   }
   else {
      if (colA[check] == colB[check]) {
         value = 0;
      }
      else {
         value = (colA[check] &gt; colB[check]) ? 1 : -1;
      }
   }
   // do we need to reverse the sort?
   if (typeof(reverse) != &quot;undefined&quot; &amp;&amp; reverse.toLowerCase() == &quot;true&quot;) {
       value = -value;
   }
   return(value);
}</script>
    <type>RHINO</type>
  </scriptlet>
  <possibleResponses>
    <opResponse id="c8464c1e-7ad4-4568-ba25-79811f01b21c">
      <annotation></annotation>
      <name>success</name>
      <isDefault>true</isDefault>
      <onFailure>false</onFailure>
      <type>RESOLVED</type>
      <matchRules/>
    </opResponse>
    <opResponse id="1efa891f-97d9-4f0b-b174-14193147f49b">
      <annotation></annotation>
      <name>failure</name>
      <isDefault>false</isDefault>
      <onFailure>true</onFailure>
      <type>ERROR</type>
      <matchRules/>
    </opResponse>
  </possibleResponses>
  <availableResultExpressions/>
  <resultExpression id="e71e84c4-e809-4aec-bce8-2475c4ac38c6">
    <annotation></annotation>
    <name>returnResult</name>
    <fieldName>returnResult</fieldName>
    <sourceType>RAWRESULT</sourceType>
    <filters/>
  </resultExpression>
  <iconSpec id="5f10d5c1-be40-4ab7-bce9-5f11ed58b68b">
    <baseIcon>database_table.png</baseIcon>
    <basePath>Databases/</basePath>
    <readOnly>false</readOnly>
    <layers>
      <iconSpec id="81322491-097d-4550-a2a8-b3a57964eb04">
        <baseIcon>refresh.png</baseIcon>
        <basePath>Annotations/</basePath>
        <readOnly>false</readOnly>
        <layers/>
      </iconSpec>
    </layers>
  </iconSpec>
  <opRef>
    <refId>ddd79f22-8b1e-4605-88d5-d912bb2da2b9</refId>
  </opRef>
  <fieldValues/>
  <groupAliasRef>
    <refId>5233030c-af46-432b-a682-b326ca6bf2ae</refId>
    <refName>RAS_Operator_Path</refName>
  </groupAliasRef>
  <overrideGroupAlias>${overrideJRAS}</overrideGroupAlias>
</operation>