<?xml version="1.0" encoding="UTF-8"?>
<operation id="3ab3dddb-4325-4f41-bddc-70c7d704e6ec">
  <descriptionCdata><![CDATA[3ab3dddb-4325-4f41-bddc-70c7d704e6ec.description=<pre>\nChecks to see if a list contains every element in another list.\n\nInputs\:\nsublist -Tthe contained list.\ncontainer - The containing list.\ndelimiter - A delimiter separating elements in the two lists.\n\nResponses\:\nsuccess - sublist is contained in container.\nfailure - sublist is not contained in container.\n\nResults\:\nField 1 - All items contained in the sublist that are not in the container. \n</pre>    
]]></descriptionCdata>
  <annotation>3ab3dddb-4325-4f41-bddc-70c7d704e6ec.description</annotation>
  <name>Contains All</name>
  <categories/>
  <inputs>
    <userInputBinding id="067e4f0c-635a-4541-9c0e-47d7ddb313c7">
      <annotation></annotation>
      <assignFromContext>false</assignFromContext>
      <assignToContext>false</assignToContext>
      <inputType>STRING</inputType>
      <isList>false</isList>
      <required>true</required>
      <isPersisted>true</isPersisted>
      <inputSymbol>sublist</inputSymbol>
      <listDelimiter>,</listDelimiter>
      <record>false</record>
      <prompt></prompt>
      <isMultiSelect>false</isMultiSelect>
      <sourceDelimiter>|</sourceDelimiter>
    </userInputBinding>
    <userInputBinding id="ac047f7d-febc-43d6-9504-fff8803a63cd">
      <annotation></annotation>
      <assignFromContext>false</assignFromContext>
      <assignToContext>false</assignToContext>
      <inputType>STRING</inputType>
      <isList>false</isList>
      <required>true</required>
      <isPersisted>true</isPersisted>
      <inputSymbol>container</inputSymbol>
      <listDelimiter>,</listDelimiter>
      <record>false</record>
      <prompt></prompt>
      <isMultiSelect>false</isMultiSelect>
      <sourceDelimiter>|</sourceDelimiter>
    </userInputBinding>
    <userInputBinding id="e6c2d678-f2a3-426f-aa83-71ce6f7e8d4c">
      <annotation></annotation>
      <assignFromContext>false</assignFromContext>
      <assignToContext>false</assignToContext>
      <inputType>STRING</inputType>
      <isList>false</isList>
      <required>false</required>
      <isPersisted>true</isPersisted>
      <inputSymbol>delimiter</inputSymbol>
      <listDelimiter>,</listDelimiter>
      <record>false</record>
      <prompt></prompt>
      <isMultiSelect>false</isMultiSelect>
      <sourceDelimiter>|</sourceDelimiter>
    </userInputBinding>
    <staticBinding id="6838633d-7111-4757-97ab-90a9616610bc">
      <annotation></annotation>
      <toContextKey></toContextKey>
      <fromContextKey></fromContextKey>
      <assignFromContext>false</assignFromContext>
      <assignToContext>false</assignToContext>
      <inputType>STRING</inputType>
      <recordKey></recordKey>
      <isList>false</isList>
      <required>false</required>
      <isPersisted>true</isPersisted>
      <inputSymbol>Field_1</inputSymbol>
      <listDelimiter></listDelimiter>
      <value>${sublist}</value>
      <record>false</record>
    </staticBinding>
    <staticBinding id="80dc7b36-cc32-467c-b397-8206d0ab10c2">
      <annotation></annotation>
      <toContextKey></toContextKey>
      <fromContextKey></fromContextKey>
      <assignFromContext>false</assignFromContext>
      <assignToContext>false</assignToContext>
      <inputType>STRING</inputType>
      <recordKey></recordKey>
      <isList>false</isList>
      <required>false</required>
      <isPersisted>true</isPersisted>
      <inputSymbol>Field_2</inputSymbol>
      <listDelimiter></listDelimiter>
      <value>${container}</value>
      <record>false</record>
    </staticBinding>
    <staticBinding id="fe4b9dde-0ecb-4133-a3fe-c6db022e431d">
      <annotation></annotation>
      <toContextKey></toContextKey>
      <fromContextKey></fromContextKey>
      <assignFromContext>false</assignFromContext>
      <assignToContext>false</assignToContext>
      <inputType>STRING</inputType>
      <recordKey></recordKey>
      <isList>false</isList>
      <required>false</required>
      <isPersisted>true</isPersisted>
      <inputSymbol>Field_3</inputSymbol>
      <listDelimiter></listDelimiter>
      <value>${delimiter}</value>
      <record>false</record>
    </staticBinding>
    <staticBinding id="08164a58-5836-450d-950a-c1041c6d254a">
      <annotation></annotation>
      <toContextKey></toContextKey>
      <fromContextKey></fromContextKey>
      <assignFromContext>false</assignFromContext>
      <assignToContext>false</assignToContext>
      <inputType>STRING</inputType>
      <recordKey></recordKey>
      <isList>false</isList>
      <required>false</required>
      <isPersisted>true</isPersisted>
      <inputSymbol>Field_4</inputSymbol>
      <listDelimiter></listDelimiter>
      <value>${in4}</value>
      <record>false</record>
    </staticBinding>
  </inputs>
  <scriptlet id="4fff84b7-f907-49f0-a753-0953060f5aa9">
    <annotation></annotation>
    <name>Operation Contains All (5960219c-b246-4dbf-a1b3-d1d3c0675d29)</name>
    <script>
scriptletResponse = &quot;failure&quot;;
scriptletResult = &quot;&quot;;

try{
if (delimiter != null)
	limiter = delimiter;
else
	limiter = &quot;,&quot;;
var sub = sublist.split(limiter);
if (sub.length == 1){
var index = container.indexOf(sub[0]);
var found = false;
while (index &gt;= 0 &amp;&amp; !found){
	if (index == 0 || container.charAt(index-1) == limiter)
		if (index+sub[0].length &gt;= container.length || container.charAt(index+sub[0].length) == limiter)
	found = true;
	index = container.indexOf(sublist, index+1);
}
if (found)
	scriptletResponse = &quot;success&quot;;
else
	scriptletResult = sub[0];
}
else{
var parent = container.split(limiter);
missing = &quot;&quot;;

if (sub==null || parent==null) {
  scriptletResponse = &quot;failure&quot;;
} else {
	for (count = 0; count &lt; sub.length; count++){
		var curr = sub[count];
		if (!contains(parent, curr.toLowerCase())){
			if (missing.length &gt;0){
				missing += delimiter;
				missing += curr;
			}
			else
				missing = curr;
		}
	}
}
if (missing.length &gt; 0){
	scriptletResponse = &quot;failure&quot;;
	scriptletResult = missing;
}
else{
	scriptletResponse = &quot;success&quot;;
	scriptletResult = &quot;&quot;;
}
}
}
catch (e){
  scriptletResponse = &quot;failure&quot;;
  scriptletResult = &quot;&quot;+e;
}

function contains (parent, sub){
	for (icount = 0; icount &lt; parent.length; icount++){
		var p = parent[icount].toLowerCase();
		var index = p.indexOf(&quot;&quot;+sub);
		if (index&gt;=0||p==&quot;&quot;+sub)
			return true;
	}
	return false;
}

</script>
    <type>RHINO</type>
  </scriptlet>
  <possibleResponses>
    <opResponse id="9496a8d0-2b2a-4aab-bb8c-6f26fbd3d8de">
      <annotation></annotation>
      <name>success</name>
      <isDefault>false</isDefault>
      <onFailure>false</onFailure>
      <type>RESOLVED</type>
      <matchRules/>
    </opResponse>
    <opResponse id="cc6d30a5-3a16-4bca-ad70-801373e0109a">
      <annotation></annotation>
      <name>failure</name>
      <isDefault>true</isDefault>
      <onFailure>true</onFailure>
      <type>ERROR</type>
      <matchRules/>
    </opResponse>
  </possibleResponses>
  <availableResultExpressions/>
  <resultExpression id="da666a1a-ab9c-45f0-bc31-6c580f253408">
    <annotation></annotation>
    <name>Field 1</name>
    <fieldName>Field_1</fieldName>
    <sourceType>RAWRESULT</sourceType>
    <filters/>
  </resultExpression>
  <iconSpec id="7399d16f-7210-40cc-a34e-b074bed4e570">
    <baseIcon>compare.png</baseIcon>
    <basePath>Utilities/</basePath>
    <readOnly>false</readOnly>
    <layers/>
  </iconSpec>
  <opRef>
    <refId>ddd79f22-8b1e-4605-88d5-d912bb2da2b9</refId>
  </opRef>
  <fieldValues/>
  <groupAliasRef>
    <refId>5233030c-af46-432b-a682-b326ca6bf2ae</refId>
    <refName>RAS_Operator_Path</refName>
  </groupAliasRef>
  <overrideGroupAlias>${overrideJRAS}</overrideGroupAlias>
</operation>